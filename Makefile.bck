PROJECT := $(notdir $(CURDIR))
DOCKER_REPO := leangeder/$(PROJECT)
DEPLOY_REPO := 
TIMESTAMP = $(shell date +%s )

.PHONY: update
update: up
	sed '/^###/,$$d' Dockerfile > /tmp/Dockerfile_$(PROJECT)
	echo "RUN go get github.com/codegangsta/gin\nCMD [\"gin\", \"-g\" , \"run\", \"main.go\"]" >> /tmp/Dockerfile_$(PROJECT)
	eval $$(minikube docker-env); \
	docker build --rm --force-rm -t $(REPO):$(TIMESTAMP) -f /tmp/Dockerfile_$(PROJECT) .
	kubectl set image -f deploy/deploy.yml $(PROJECT)=$(REPO):$(TIMESTAMP)

.PHONY: create
create: up
	sed '/^###/,$$d' Dockerfile > /tmp/Dockerfile_$(PROJECT)
	echo "RUN go get github.com/cespare/reflex\nCMD [\"reflex\", \"-s\", \"-g\", \".reflex.conf\", \"--\", \"reflex\", \"-c\", \".reflex.conf\"]" >> /tmp/Dockerfile_$(PROJECT)
	# echo "RUN go get github.com/codegangsta/gin\nCMD [\"gin\", \"-g\", \"run\", \"main.go\"]" >> /tmp/Dockerfile_$(PROJECT)
	eval $$(minikube docker-env); \
	docker build --rm --force-rm -t $(REPO):last -f /tmp/Dockerfile_$(PROJECT) .
	kubectl create -f deploy/
	kubectl patch -f deploy/deploy.yml --patch "$$(cat .dev/deploy.yml)"

.PHONY: delete
delete:
	kubectl delete -R -f deploy/ --force

.PHONY: push
push:
	docker build --rm --force-rm --compress -t $(REPO):last -f Dockerfile .
	docker push $(REPO):last

.PHONY: service
service: up
	kubectl replace -R -f .dev/env.yml --force

.PHONY: up
up:
ifeq (0,$(shell minikube status | grep Running | wc -l))
	minikube config set WantReportErrorPrompt false
	minikube start --cpus=4 --memory=8192 --mount --mount-string $(CURDIR):/$(PROJECT)
	-minikube addons enable ingress
	-minikube addons enable heapster
endif
